#!/bin/sh

BACKTITLE=" MDSip throughput tests "
DIALOG=dialog

export TARGET_HOST=${TARGET_HOST:=localhost}
export TARGET_PORT=${TARGET_PORT:=8000}
export TARGET_SPOOL=${TARGET_SPOOL:=/tmp/mdsip_test}
export TARGET_USER=${TARGET_USER:=${USER}}


# default protocol
PROTOCOL=${PROTOCOL:=tcp}

MDSPLUS_DIR=@MDSPLUS_DIR@
SRCDIR=@abs_top_srcdir@
BUILDDIR=@abs_top_builddir@
MDSIP=@MDS_BINDIR@/mdsip
LD_LIBRARY_PATH=@MDS_LIBDIR@:${LD_LIBRARY_PATH}

# adds path for mdsip-client-x scripts overload
PATH=${SRCDIR}/conf:${PATH}

TESTS="segment_size speed_spread speed_trend jscope_streamtest jscope_hugefile"
TESTS_ACTIVE="segment_size"


segment_size_desc=" TCP/UDT Throughput vs segment size "
speed_spread_desc=" Bandwidth distribution "
speed_trend_desc=" Throughput time trend "
jscope_streamtest_desc=" Test streaming singnal example "
jscope_hugefile_desc=" Test streaming singnal example "


# /////////////////////////////////////////////////////////////////////////// #
# /// SELECT TESTS  ///////////////////////////////////////////////////////// #
# /////////////////////////////////////////////////////////////////////////// #


function test_active() {
  echo "${TESTS_ACTIVE}" | grep -c $1  > /dev/null && echo ON || echo OFF
}

function test_desc() {
  tmp=$1_desc
  echo $tmp
}


function select_tests() {
_TESTS_ACTIVE=${TESTS_ACTIVE}
_TESTS_ACTIVE=$(${DIALOG} --backtitle "${BACKTITLE}" \
		  --title "Tests selection" --checklist \
		  "Choose preferred tests to be launched" 15 60 5 \
		  $(for i in ${TESTS}; do
		     echo "$i $(test_desc $i) $(test_active $i)"
		    done) \
		  3>&1 1>&2 2>&3)
exitstatus=$?
if [ $exitstatus = 0 ]; then
 TESTS_ACTIVE=$(echo "${_TESTS_ACTIVE}" | sed -e 's/"//g') # remove quotes
fi
eval main ConfigTests

}



# /////////////////////////////////////////////////////////////////////////// #
# /// CONFIG TESTS  ///////////////////////////////////////////////////////// #
# /////////////////////////////////////////////////////////////////////////// #


function config_tests() {
VALUES=$(${DIALOG} --backtitle "${BACKTITLE}" \
		   --ok-label "Edit config" --cancel-label "Finish" \
		   --title "Tests selection" --menu \
		   "Choose test to edit configuration" 15 60 5 \
		   $(for i in ${TESTS_ACTIVE}; do
		      echo "$i $(test_desc $i)"
		     done) \
		   3>&1 1>&2 2>&3)
exitstatus=$?
if [ $exitstatus = 0 ]; then
 make -C ${VALUES} setup
 eval config_tests
else
 eval main Do
fi
}




# /////////////////////////////////////////////////////////////////////////// #
# /// SELECT TARGET ///////////////////////////////////////////////////////// #
# /////////////////////////////////////////////////////////////////////////// #

function select_target() {
VALUES=$(${DIALOG} --ok-label "Submit" \
	  --backtitle "${BACKTITLE}" \
	  --title "Target selection" \
	  --form "\nSelect tests default target host/port \n " 15 50 0 \
	  "Host:"     1 1	"$TARGET_HOST" 	1 10 20 0 \
	  "Port:"     2 1	"$TARGET_PORT" 	2 10 20 0 \
	  "Spool:"    3 1	"$TARGET_SPOOL"	3 10 20 0 \
	  "User:"     4 1	"$TARGET_USER"	4 10 20 0 \
3>&1 1>&2 2>&3)
opt=$?

if [ $opt = 0 ]; then
 # export values just entered
 export TARGET_HOST=$(echo ${VALUES} | awk '{print $1}')
 export TARGET_PORT=$(echo ${VALUES} | awk '{print $2}')
 export TARGET_SPOOL=$(echo ${VALUES} | awk '{print $3}')
 export TARGET_USER=$(echo ${VALUES} | awk '{print $4}')
fi
eval main SelectTests
}





# /////////////////////////////////////////////////////////////////////////// #
# /// MAIN ////////////////////////////////////////////////////////////////// #
# /////////////////////////////////////////////////////////////////////////// #

function main() {
[ -n "$1" ] && DEF_ITEM="--default-item $1"
VALUES=$(${DIALOG} --cancel-label "Exit" \
	  --backtitle "${BACKTITLE}" --title "Main Menu" \
	  ${DEF_ITEM} \
	  --menu "\n\
Navigate options using [UP] [DOWN],[Enter] to Select items.\
The current selected connection target is ${TARGET_HOST}:${TARGET_PORT}\
          \n " \
          18 50 5 \
	  Target      "Select target host/port" \
	  SelectTests "Select active tests" \
	  ConfigTests "Configure tests parameters" \
	  " " "" \
	  Do "Preform tests" \
3>&1 1>&2 2>&3)
opt=$?

if [ $opt = 0 ]; then
 case ${VALUES} in
  Target) select_target;;
  SelectTests) select_tests;;
  ConfigTests) config_tests;;
  Do) make ${TESTS_ACTIVE} DIALOG_BAR=${DIALOG_BAR:=yes};;
  *) main;;
 esac
fi
exit 0

}



# DO ############
eval main ||:
